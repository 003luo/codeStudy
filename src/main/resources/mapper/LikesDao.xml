<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codestudy.dao.LikesDao">

    <resultMap type="com.codestudy.entity.Likes" id="LikesMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="timestamp" column="timestamp" jdbcType="TIMESTAMP"/>
        <result property="active" column="active" jdbcType="INTEGER"/>
        <result property="noteId" column="note_id" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="LikesMap">
        select
          id, user_id, timestamp, active, note_id
        from likes
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryByCondition" resultMap="LikesMap">
        select
          id, user_id, timestamp, active, note_id
        from likes
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="timestamp != null">
                and timestamp = #{timestamp}
            </if>
            <if test="active != null">
                and active = #{active}
            </if>
            <if test="noteId != null">
                and note_id = #{noteId}
            </if>
        </where>
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Integer">
        select count(1)
        from likes
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="timestamp != null">
                and timestamp = #{timestamp}
            </if>
            <if test="active != null">
                and active = #{active}
            </if>
            <if test="noteId != null">
                and note_id = #{noteId}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into likes(user_id, timestamp, active, note_id)
        values (#{userId}, #{timestamp}, #{active}, #{noteId})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into likes(user_id, timestamp, active, note_id)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.userId}, #{entity.timestamp}, #{entity.active}, #{entity.noteId})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into likes(user_id, timestamp, active, note_id)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.timestamp}, #{entity.active}, #{entity.noteId})
        </foreach>
        on duplicate key update
        user_id = values(user_id),
        timestamp = values(timestamp),
        active = values(active),
        note_id = values(note_id)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update likes
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="timestamp != null">
                timestamp = #{timestamp},
            </if>
            <if test="active != null">
                active = #{active},
            </if>
            <if test="noteId != null">
                note_id = #{noteId},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from likes where id = #{id}
    </delete>

</mapper>

